/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';

import '@stencil/router';
import '@stencil/state-tunnel';


import {
  BootstrapThemeColor,
  IBreadcrumbItem,
} from './common/index';
import {
  DurationInputArg2,
} from 'moment';
import {
  Placement,
} from 'popper.js';
import {
  BootstrapThemeColor as BootstrapThemeColor2,
} from './common/bootstrap-theme-color.type';
import {
  IStcTabContentData,
  IStcTabHeaderData,
} from './components/stc-tabs/interfaces';


declare global {
  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}

  namespace StencilComponents {

    interface CwcAlert {
      'animatable': boolean;
      'dismiss': () => void;
      'dismissible': boolean;
      'onDismiss': (hostEl: HTMLElement) => void;
      'show': boolean;
      'type': string;
    }

    interface CwcAutocompleteSelect {
      /**
       * End - Set Placeholder * Public methods *
       */
      'close': () => void;
      'data': any[];
      'id': string;
      'idValue': string;
      'itemAs': string;
      'label': string;
      'minSearchLength': number;
      'placeholder': string;
      'searchKey': string;
      'template': string;
      'value': any[];
    }

    interface CwcAvatar {
      'background': string;
      'color': string;
      'fontSize': number;
      'length': number;
      'name': string;
      'rounded': boolean;
      'size': number;
      'uppercase': boolean;
    }

    interface CwcCheckboxGroup {
      'allowSelectAll': boolean;
      'check': (checkbox: any) => void;
      'checkAll': () => void;
      'data': Array<Object>;
      'displayProp': string;
      'selectAllLabel': string;
      'toggle': (checkbox: any) => void;
      'toggleAll': () => void;
      'uncheck': (checkbox: any) => void;
      'uncheckAll': () => void;
      'value': Array<Object>;
    }

    interface CwcCombobox {
      'btnLeftPosition': boolean;
      'btnText': string;
      'data': Array<string|number>;
      'id': string;
      'label': string;
      'placeholder': string;
      'readonly': boolean;
      'value': any;
    }

    interface CwcDatepicker {
      'endDate': string;
      'format': string;
      'id': string;
      'label': string;
      'lang': string;
      'startDate': string;
    }

    interface CwcDatetimeInput {
      'clamp': string;
      'date': string;
      'dateOrder': Object;
      'datetime': string;
      'day': number;
      'default': any;
      'disabled': boolean;
      'hour': number;
      'hour12': number;
      'hour12Format': boolean;
      'invalid': boolean;
      'isAm': boolean;
      'locale': string;
      'markers': Object;
      'max': Object;
      'millisecond': number;
      'min': Object;
      'minute': number;
      'month': number;
      'name': string;
      'now': () => void;
      'partsDisabled': Object;
      'partsHidden': Object;
      'partsStep': Object;
      'propertyForValue': string;
      'required': boolean;
      'second': number;
      'step': number;
      'time': string;
      'timezone': string;
      'validate': () => boolean;
      'value': Object;
      'valueAsDate': Date;
      'valueAsNumber': number;
      'withTimezone': boolean;
      'year': number;
    }

    interface CwcDnd {
      'dragulaOpts': any;
      'getDataModel': () => any[];
      'getDrake': () => any;
      'handleClass': string;
      'rows': string[];
    }

    interface CwcDropdown {
      'close': () => void;
      'open': () => void;
      'toggle': () => void;
    }

    interface CwcFileInput {
      'accept': string;
      'files': any[];
      'formDataName': string;
      'headers': string;
      'maxFileSize': number;
      'maxFiles': number;
      'method': string;
      'noAuto': boolean;
      'nodrop': boolean;
      'target': string;
      'timeout': number;
      'type': BootstrapThemeColor;
    }

    interface CwcInfiniteListWatcher {
      'bindToList': boolean;
      'bottomOffset': number;
      'debounce': number;
      'lastItemSelector': string;
      'listSelector': string;
      'loadMore': () => void;
    }

    interface CwcInlineeditTextarea {
      'id': string;
      'label': string;
      'placeholder': string;
      'value': string;
    }

    interface CwcInlineedit {
      'id': string;
      'label': string;
      'placeholder': string;
      'value': any;
    }

    interface CwcList {
      'addClass': string;
      'addClassEven': string;
      'addClassFirst': string;
      'addClassLast': string;
      'addClassOdd': string;
      'interpolationRegex': any;
      'itemAs': string;
      'items': any[];
      'listId': string;
      'wrapperClass': string;
    }

    interface CwcMarkdown {
      'data': string;
    }

    interface CwcModal {
      'animation': boolean;
      'backdrop': any;
      'btntype': string;
      'centered': boolean;
      'closeModal': () => void;
      'customId': string;
      'getModalRef': () => this;
      'keyboard': boolean;
      'modalTitle': string;
      'modalfocus': boolean;
      'openModal': () => void;
      'show': boolean;
      'showButton': boolean;
      'size': string;
      'toggle': () => any;
    }

    interface CwcMoment {
      'date': string;
      'diff': boolean;
      'duration': string;
      'format': string;
      'humanize': boolean;
      'lang': string;
      'separator': string;
      'unit': DurationInputArg2;
    }

    interface CwcMultiselect {
      'dataDisplay': string;
      'selected': Array<any>;
      'value': Array<any>;
    }

    interface CwcNavigationContainerSection {

    }

    interface CwcNavigationGlobalItem {
      'icon': any;
      'isActive': boolean;
      'link': string;
      'titleText': string;
    }

    interface CwcNavigationGlobalSection {

    }

    interface CwcNavigation {
      'isCollapsed': boolean;
    }

    interface NavigationItemGroup {
      'hasSeparator': boolean;
      'text': string;
      'titleText': string;
    }

    interface NavigationItem {
      'compact': boolean;
      'dropIcon': string;
      'icon': string;
      'isActive': boolean;
      'link': string;
      'showIcon': boolean;
      'subText': string;
      'text': string;
      'titleText': string;
    }

    interface NavigationTitle {
      'compact': boolean;
      'icon': string;
      'showIcon': boolean;
      'text': string;
      'titleText': string;
    }

    interface CwcNumberInput {
      'alwaysSign': boolean;
      'autoPadding': boolean;
      'autoResize': boolean;
      'blurMethod': (e: any) => void;
      'currency': string;
      'currencyDisplay': string;
      'default': number;
      'disabled': boolean;
      'focusMethod': () => void;
      'formatNumber': Function;
      'hidden': boolean;
      'input': string;
      'invalid': boolean;
      'locale': string;
      'max': number;
      'maximumFractionDigits': number;
      'maximumSignificantDigits': number;
      'min': number;
      'minimumFractionDigits': number;
      'minimumIntegerDigits': number;
      'minimumSignificantDigits': number;
      'minlength': number;
      'name': string;
      'noAutoWidth': boolean;
      'noClamp': boolean;
      'numberStyle': string;
      'padLength': number;
      'parseNumber': Function;
      'placeholder': string;
      'propertyForValue': string;
      'required': boolean;
      'resize': () => void;
      'saturate': boolean;
      'separators': Object;
      'startAt': number;
      'step': number;
      'stepMod': number;
      'unit': string;
      'unitSeparator': string;
      'useGrouping': boolean;
      'validate': () => boolean;
      'value': number;
      'valueAsNumber': number;
    }

    interface CwcPopper {
      'arrow': boolean;
      'autoClose': boolean;
      'autoOpen': boolean;
      'close': () => void;
      'closeable': boolean;
      'isToggleBtn': boolean;
      'open': () => void;
      'placement': Placement;
      'refid': string;
      'toggle': () => void;
      'trigger': string;
    }

    interface CwcProgressBar {
      'animated': boolean;
      'classes': string;
      'closable': boolean;
      'height': number;
      'progress': number;
      'progressBarType': BootstrapThemeColor;
      'striped': boolean;
      'text': string;
    }

    interface CwcResolutionInfo {
      'height': number;
      'width': number;
    }

    interface CwcStickyHeader {
      'background': string;
      'color': string;
    }

    interface CwcSticky {

    }

    interface CwcStyles {

    }

    interface CwcSwitch {
      'checkboxTitle': string;
      'checked': boolean;
      'for': string;
      'id': string;
      'labelOFF': string;
      'labelON': string;
      'value': boolean;
    }

    interface CwcTag {
      'classes': string;
      'closable': boolean;
      'close': (e?: UIEvent) => void;
      'imgLink': string;
      'limitTo': number;
      'link': string;
      'onCloseData': any;
      'removeOnClose': boolean;
      'rounded': boolean;
      'tagType': BootstrapThemeColor;
      'text': string;
    }

    interface CwcTypeahead {
      /**
       * Public methods
       */
      'close': () => void;
      'data': any[];
      'googleAutocomplete': boolean;
      'highlight': boolean;
      'idValue': string;
      'itemAs': string;
      'minSearchLength': number;
      'placeholder': string;
      'searchKey': string;
      'template': string;
    }

    interface CwcWysiwygEditor {
      'defaultMode': string;
      'fencing': boolean;
      'getRef': () => any;
      'html': boolean;
      'id': string;
      'images': object;
      'label': string;
      'markdown': boolean;
      'wysiwyg': boolean;
    }

    interface FclImage {
      'brokenUrl': any;
      'height': any;
      'src': any;
      'width': any;
    }

    interface FclVideoPlayer {
      'autoinit': boolean;
      'className': string;
      'controls': boolean;
      'poster': string;
      'theme': string;
      'thumbnail': any;
    }

    interface MwcSlider {
      'disabled': boolean;
      'max': number;
      'min': number;
      'slidercolor': string;
      'step': number;
      'stepdown': (amount?: number) => void;
      'stepup': (amount?: number) => void;
      'value': number;
    }

    interface MyCheckbox {
      'checkboxTitle': string;
      'checked': boolean;
      'for': string;
      'id': string;
      'value': boolean;
    }

    interface MyDropdown {
      'dropdownTitle': string;
      'dropdownValue': string;
      'for': string;
      'id': string;
    }

    interface MyDynamicForm {
      'ajv': any;
      'form': any;
      'schema': any;
    }

    interface MyInput {
      'for': string;
      'format': any;
      'id': string;
      'inputTitle': string;
      'value': any;
    }

    interface ScbBadge {
      'link': string;
      'pill': boolean;
      'type': BootstrapThemeColor;
    }

    interface ScbBreadcrumb {
      'items': IBreadcrumbItem[];
    }

    interface ScbCollapse {
      'collapseid': string;
      'items': any[];
    }

    interface ScbNavbar {
      'bgcolor': string;
      'navbarcolor': string;
      'placement': string;
      'size': string;
    }

    interface ScbTooltip {
      'delay': any;
      'href': string;
      'offset': string;
      'placement': string;
      'target': string;
      'tooltipTitle': string;
      'trigger': string;
      'type': string;
    }

    interface StcTabContent {
      'getChild': () => IStcTabContentData;
      'name': string;
    }

    interface StcTabHeader {
      'getChild': () => IStcTabHeaderData;
      'name': string;
    }

    interface StcTabs {

    }

    interface AlertsPage {

    }

    interface AutocompleteSelectPage {

    }

    interface AvatarPage {

    }

    interface BadgePage {

    }

    interface BreadcrumbPage {

    }

    interface CheckboxGroupPage {
      'value': Array<Object>;
    }

    interface CollapsePage {

    }

    interface ComboboxPage {

    }

    interface DatepickerPage {

    }

    interface DatetimeInputPage {

    }

    interface DndPage {

    }

    interface DropdownPage {

    }

    interface FclImagePage {

    }

    interface FileInputPage {

    }

    interface FormPage {

    }

    interface InfiniteListPage {

    }

    interface InlineeditPage {

    }

    interface InlineeditTextareaPage {

    }

    interface ListPage {

    }

    interface MarkdownPage {

    }

    interface ModalPage {

    }

    interface MomentPage {

    }

    interface MultiselectPage {

    }

    interface MwcSliderPage {

    }

    interface MyCheckboxPage {

    }

    interface NavbarPage {

    }

    interface MySwitchPage {

    }

    interface NavigationPage {

    }

    interface NumberInputPage {

    }

    interface PopperPage {

    }

    interface ProgressBarPage {

    }

    interface ResolutionInfoPage {

    }

    interface StencilBsDemoPage {
      'root': string;
    }

    interface StickyPage {

    }

    interface TabsPage {

    }

    interface TagPage {

    }

    interface TooltipPage {

    }

    interface TypeaheadPage {

    }

    interface VideoPlayerPage {

    }

    interface WysiwygEditorPage {

    }
  }


    interface HTMLCwcAlertElement extends StencilComponents.CwcAlert, HTMLStencilElement {}

    var HTMLCwcAlertElement: {
      prototype: HTMLCwcAlertElement;
      new (): HTMLCwcAlertElement;
    };
    

    interface HTMLCwcAutocompleteSelectElement extends StencilComponents.CwcAutocompleteSelect, HTMLStencilElement {}

    var HTMLCwcAutocompleteSelectElement: {
      prototype: HTMLCwcAutocompleteSelectElement;
      new (): HTMLCwcAutocompleteSelectElement;
    };
    

    interface HTMLCwcAvatarElement extends StencilComponents.CwcAvatar, HTMLStencilElement {}

    var HTMLCwcAvatarElement: {
      prototype: HTMLCwcAvatarElement;
      new (): HTMLCwcAvatarElement;
    };
    

    interface HTMLCwcCheckboxGroupElement extends StencilComponents.CwcCheckboxGroup, HTMLStencilElement {}

    var HTMLCwcCheckboxGroupElement: {
      prototype: HTMLCwcCheckboxGroupElement;
      new (): HTMLCwcCheckboxGroupElement;
    };
    

    interface HTMLCwcComboboxElement extends StencilComponents.CwcCombobox, HTMLStencilElement {}

    var HTMLCwcComboboxElement: {
      prototype: HTMLCwcComboboxElement;
      new (): HTMLCwcComboboxElement;
    };
    

    interface HTMLCwcDatepickerElement extends StencilComponents.CwcDatepicker, HTMLStencilElement {}

    var HTMLCwcDatepickerElement: {
      prototype: HTMLCwcDatepickerElement;
      new (): HTMLCwcDatepickerElement;
    };
    

    interface HTMLCwcDatetimeInputElement extends StencilComponents.CwcDatetimeInput, HTMLStencilElement {}

    var HTMLCwcDatetimeInputElement: {
      prototype: HTMLCwcDatetimeInputElement;
      new (): HTMLCwcDatetimeInputElement;
    };
    

    interface HTMLCwcDndElement extends StencilComponents.CwcDnd, HTMLStencilElement {}

    var HTMLCwcDndElement: {
      prototype: HTMLCwcDndElement;
      new (): HTMLCwcDndElement;
    };
    

    interface HTMLCwcDropdownElement extends StencilComponents.CwcDropdown, HTMLStencilElement {}

    var HTMLCwcDropdownElement: {
      prototype: HTMLCwcDropdownElement;
      new (): HTMLCwcDropdownElement;
    };
    

    interface HTMLCwcFileInputElement extends StencilComponents.CwcFileInput, HTMLStencilElement {}

    var HTMLCwcFileInputElement: {
      prototype: HTMLCwcFileInputElement;
      new (): HTMLCwcFileInputElement;
    };
    

    interface HTMLCwcInfiniteListWatcherElement extends StencilComponents.CwcInfiniteListWatcher, HTMLStencilElement {}

    var HTMLCwcInfiniteListWatcherElement: {
      prototype: HTMLCwcInfiniteListWatcherElement;
      new (): HTMLCwcInfiniteListWatcherElement;
    };
    

    interface HTMLCwcInlineeditTextareaElement extends StencilComponents.CwcInlineeditTextarea, HTMLStencilElement {}

    var HTMLCwcInlineeditTextareaElement: {
      prototype: HTMLCwcInlineeditTextareaElement;
      new (): HTMLCwcInlineeditTextareaElement;
    };
    

    interface HTMLCwcInlineeditElement extends StencilComponents.CwcInlineedit, HTMLStencilElement {}

    var HTMLCwcInlineeditElement: {
      prototype: HTMLCwcInlineeditElement;
      new (): HTMLCwcInlineeditElement;
    };
    

    interface HTMLCwcListElement extends StencilComponents.CwcList, HTMLStencilElement {}

    var HTMLCwcListElement: {
      prototype: HTMLCwcListElement;
      new (): HTMLCwcListElement;
    };
    

    interface HTMLCwcMarkdownElement extends StencilComponents.CwcMarkdown, HTMLStencilElement {}

    var HTMLCwcMarkdownElement: {
      prototype: HTMLCwcMarkdownElement;
      new (): HTMLCwcMarkdownElement;
    };
    

    interface HTMLCwcModalElement extends StencilComponents.CwcModal, HTMLStencilElement {}

    var HTMLCwcModalElement: {
      prototype: HTMLCwcModalElement;
      new (): HTMLCwcModalElement;
    };
    

    interface HTMLCwcMomentElement extends StencilComponents.CwcMoment, HTMLStencilElement {}

    var HTMLCwcMomentElement: {
      prototype: HTMLCwcMomentElement;
      new (): HTMLCwcMomentElement;
    };
    

    interface HTMLCwcMultiselectElement extends StencilComponents.CwcMultiselect, HTMLStencilElement {}

    var HTMLCwcMultiselectElement: {
      prototype: HTMLCwcMultiselectElement;
      new (): HTMLCwcMultiselectElement;
    };
    

    interface HTMLCwcNavigationContainerSectionElement extends StencilComponents.CwcNavigationContainerSection, HTMLStencilElement {}

    var HTMLCwcNavigationContainerSectionElement: {
      prototype: HTMLCwcNavigationContainerSectionElement;
      new (): HTMLCwcNavigationContainerSectionElement;
    };
    

    interface HTMLCwcNavigationGlobalItemElement extends StencilComponents.CwcNavigationGlobalItem, HTMLStencilElement {}

    var HTMLCwcNavigationGlobalItemElement: {
      prototype: HTMLCwcNavigationGlobalItemElement;
      new (): HTMLCwcNavigationGlobalItemElement;
    };
    

    interface HTMLCwcNavigationGlobalSectionElement extends StencilComponents.CwcNavigationGlobalSection, HTMLStencilElement {}

    var HTMLCwcNavigationGlobalSectionElement: {
      prototype: HTMLCwcNavigationGlobalSectionElement;
      new (): HTMLCwcNavigationGlobalSectionElement;
    };
    

    interface HTMLCwcNavigationElement extends StencilComponents.CwcNavigation, HTMLStencilElement {}

    var HTMLCwcNavigationElement: {
      prototype: HTMLCwcNavigationElement;
      new (): HTMLCwcNavigationElement;
    };
    

    interface HTMLNavigationItemGroupElement extends StencilComponents.NavigationItemGroup, HTMLStencilElement {}

    var HTMLNavigationItemGroupElement: {
      prototype: HTMLNavigationItemGroupElement;
      new (): HTMLNavigationItemGroupElement;
    };
    

    interface HTMLNavigationItemElement extends StencilComponents.NavigationItem, HTMLStencilElement {}

    var HTMLNavigationItemElement: {
      prototype: HTMLNavigationItemElement;
      new (): HTMLNavigationItemElement;
    };
    

    interface HTMLNavigationTitleElement extends StencilComponents.NavigationTitle, HTMLStencilElement {}

    var HTMLNavigationTitleElement: {
      prototype: HTMLNavigationTitleElement;
      new (): HTMLNavigationTitleElement;
    };
    

    interface HTMLCwcNumberInputElement extends StencilComponents.CwcNumberInput, HTMLStencilElement {}

    var HTMLCwcNumberInputElement: {
      prototype: HTMLCwcNumberInputElement;
      new (): HTMLCwcNumberInputElement;
    };
    

    interface HTMLCwcPopperElement extends StencilComponents.CwcPopper, HTMLStencilElement {}

    var HTMLCwcPopperElement: {
      prototype: HTMLCwcPopperElement;
      new (): HTMLCwcPopperElement;
    };
    

    interface HTMLCwcProgressBarElement extends StencilComponents.CwcProgressBar, HTMLStencilElement {}

    var HTMLCwcProgressBarElement: {
      prototype: HTMLCwcProgressBarElement;
      new (): HTMLCwcProgressBarElement;
    };
    

    interface HTMLCwcResolutionInfoElement extends StencilComponents.CwcResolutionInfo, HTMLStencilElement {}

    var HTMLCwcResolutionInfoElement: {
      prototype: HTMLCwcResolutionInfoElement;
      new (): HTMLCwcResolutionInfoElement;
    };
    

    interface HTMLCwcStickyHeaderElement extends StencilComponents.CwcStickyHeader, HTMLStencilElement {}

    var HTMLCwcStickyHeaderElement: {
      prototype: HTMLCwcStickyHeaderElement;
      new (): HTMLCwcStickyHeaderElement;
    };
    

    interface HTMLCwcStickyElement extends StencilComponents.CwcSticky, HTMLStencilElement {}

    var HTMLCwcStickyElement: {
      prototype: HTMLCwcStickyElement;
      new (): HTMLCwcStickyElement;
    };
    

    interface HTMLCwcStylesElement extends StencilComponents.CwcStyles, HTMLStencilElement {}

    var HTMLCwcStylesElement: {
      prototype: HTMLCwcStylesElement;
      new (): HTMLCwcStylesElement;
    };
    

    interface HTMLCwcSwitchElement extends StencilComponents.CwcSwitch, HTMLStencilElement {}

    var HTMLCwcSwitchElement: {
      prototype: HTMLCwcSwitchElement;
      new (): HTMLCwcSwitchElement;
    };
    

    interface HTMLCwcTagElement extends StencilComponents.CwcTag, HTMLStencilElement {}

    var HTMLCwcTagElement: {
      prototype: HTMLCwcTagElement;
      new (): HTMLCwcTagElement;
    };
    

    interface HTMLCwcTypeaheadElement extends StencilComponents.CwcTypeahead, HTMLStencilElement {}

    var HTMLCwcTypeaheadElement: {
      prototype: HTMLCwcTypeaheadElement;
      new (): HTMLCwcTypeaheadElement;
    };
    

    interface HTMLCwcWysiwygEditorElement extends StencilComponents.CwcWysiwygEditor, HTMLStencilElement {}

    var HTMLCwcWysiwygEditorElement: {
      prototype: HTMLCwcWysiwygEditorElement;
      new (): HTMLCwcWysiwygEditorElement;
    };
    

    interface HTMLFclImageElement extends StencilComponents.FclImage, HTMLStencilElement {}

    var HTMLFclImageElement: {
      prototype: HTMLFclImageElement;
      new (): HTMLFclImageElement;
    };
    

    interface HTMLFclVideoPlayerElement extends StencilComponents.FclVideoPlayer, HTMLStencilElement {}

    var HTMLFclVideoPlayerElement: {
      prototype: HTMLFclVideoPlayerElement;
      new (): HTMLFclVideoPlayerElement;
    };
    

    interface HTMLMwcSliderElement extends StencilComponents.MwcSlider, HTMLStencilElement {}

    var HTMLMwcSliderElement: {
      prototype: HTMLMwcSliderElement;
      new (): HTMLMwcSliderElement;
    };
    

    interface HTMLMyCheckboxElement extends StencilComponents.MyCheckbox, HTMLStencilElement {}

    var HTMLMyCheckboxElement: {
      prototype: HTMLMyCheckboxElement;
      new (): HTMLMyCheckboxElement;
    };
    

    interface HTMLMyDropdownElement extends StencilComponents.MyDropdown, HTMLStencilElement {}

    var HTMLMyDropdownElement: {
      prototype: HTMLMyDropdownElement;
      new (): HTMLMyDropdownElement;
    };
    

    interface HTMLMyDynamicFormElement extends StencilComponents.MyDynamicForm, HTMLStencilElement {}

    var HTMLMyDynamicFormElement: {
      prototype: HTMLMyDynamicFormElement;
      new (): HTMLMyDynamicFormElement;
    };
    

    interface HTMLMyInputElement extends StencilComponents.MyInput, HTMLStencilElement {}

    var HTMLMyInputElement: {
      prototype: HTMLMyInputElement;
      new (): HTMLMyInputElement;
    };
    

    interface HTMLScbBadgeElement extends StencilComponents.ScbBadge, HTMLStencilElement {}

    var HTMLScbBadgeElement: {
      prototype: HTMLScbBadgeElement;
      new (): HTMLScbBadgeElement;
    };
    

    interface HTMLScbBreadcrumbElement extends StencilComponents.ScbBreadcrumb, HTMLStencilElement {}

    var HTMLScbBreadcrumbElement: {
      prototype: HTMLScbBreadcrumbElement;
      new (): HTMLScbBreadcrumbElement;
    };
    

    interface HTMLScbCollapseElement extends StencilComponents.ScbCollapse, HTMLStencilElement {}

    var HTMLScbCollapseElement: {
      prototype: HTMLScbCollapseElement;
      new (): HTMLScbCollapseElement;
    };
    

    interface HTMLScbNavbarElement extends StencilComponents.ScbNavbar, HTMLStencilElement {}

    var HTMLScbNavbarElement: {
      prototype: HTMLScbNavbarElement;
      new (): HTMLScbNavbarElement;
    };
    

    interface HTMLScbTooltipElement extends StencilComponents.ScbTooltip, HTMLStencilElement {}

    var HTMLScbTooltipElement: {
      prototype: HTMLScbTooltipElement;
      new (): HTMLScbTooltipElement;
    };
    

    interface HTMLStcTabContentElement extends StencilComponents.StcTabContent, HTMLStencilElement {}

    var HTMLStcTabContentElement: {
      prototype: HTMLStcTabContentElement;
      new (): HTMLStcTabContentElement;
    };
    

    interface HTMLStcTabHeaderElement extends StencilComponents.StcTabHeader, HTMLStencilElement {}

    var HTMLStcTabHeaderElement: {
      prototype: HTMLStcTabHeaderElement;
      new (): HTMLStcTabHeaderElement;
    };
    

    interface HTMLStcTabsElement extends StencilComponents.StcTabs, HTMLStencilElement {}

    var HTMLStcTabsElement: {
      prototype: HTMLStcTabsElement;
      new (): HTMLStcTabsElement;
    };
    

    interface HTMLAlertsPageElement extends StencilComponents.AlertsPage, HTMLStencilElement {}

    var HTMLAlertsPageElement: {
      prototype: HTMLAlertsPageElement;
      new (): HTMLAlertsPageElement;
    };
    

    interface HTMLAutocompleteSelectPageElement extends StencilComponents.AutocompleteSelectPage, HTMLStencilElement {}

    var HTMLAutocompleteSelectPageElement: {
      prototype: HTMLAutocompleteSelectPageElement;
      new (): HTMLAutocompleteSelectPageElement;
    };
    

    interface HTMLAvatarPageElement extends StencilComponents.AvatarPage, HTMLStencilElement {}

    var HTMLAvatarPageElement: {
      prototype: HTMLAvatarPageElement;
      new (): HTMLAvatarPageElement;
    };
    

    interface HTMLBadgePageElement extends StencilComponents.BadgePage, HTMLStencilElement {}

    var HTMLBadgePageElement: {
      prototype: HTMLBadgePageElement;
      new (): HTMLBadgePageElement;
    };
    

    interface HTMLBreadcrumbPageElement extends StencilComponents.BreadcrumbPage, HTMLStencilElement {}

    var HTMLBreadcrumbPageElement: {
      prototype: HTMLBreadcrumbPageElement;
      new (): HTMLBreadcrumbPageElement;
    };
    

    interface HTMLCheckboxGroupPageElement extends StencilComponents.CheckboxGroupPage, HTMLStencilElement {}

    var HTMLCheckboxGroupPageElement: {
      prototype: HTMLCheckboxGroupPageElement;
      new (): HTMLCheckboxGroupPageElement;
    };
    

    interface HTMLCollapsePageElement extends StencilComponents.CollapsePage, HTMLStencilElement {}

    var HTMLCollapsePageElement: {
      prototype: HTMLCollapsePageElement;
      new (): HTMLCollapsePageElement;
    };
    

    interface HTMLComboboxPageElement extends StencilComponents.ComboboxPage, HTMLStencilElement {}

    var HTMLComboboxPageElement: {
      prototype: HTMLComboboxPageElement;
      new (): HTMLComboboxPageElement;
    };
    

    interface HTMLDatepickerPageElement extends StencilComponents.DatepickerPage, HTMLStencilElement {}

    var HTMLDatepickerPageElement: {
      prototype: HTMLDatepickerPageElement;
      new (): HTMLDatepickerPageElement;
    };
    

    interface HTMLDatetimeInputPageElement extends StencilComponents.DatetimeInputPage, HTMLStencilElement {}

    var HTMLDatetimeInputPageElement: {
      prototype: HTMLDatetimeInputPageElement;
      new (): HTMLDatetimeInputPageElement;
    };
    

    interface HTMLDndPageElement extends StencilComponents.DndPage, HTMLStencilElement {}

    var HTMLDndPageElement: {
      prototype: HTMLDndPageElement;
      new (): HTMLDndPageElement;
    };
    

    interface HTMLDropdownPageElement extends StencilComponents.DropdownPage, HTMLStencilElement {}

    var HTMLDropdownPageElement: {
      prototype: HTMLDropdownPageElement;
      new (): HTMLDropdownPageElement;
    };
    

    interface HTMLFclImagePageElement extends StencilComponents.FclImagePage, HTMLStencilElement {}

    var HTMLFclImagePageElement: {
      prototype: HTMLFclImagePageElement;
      new (): HTMLFclImagePageElement;
    };
    

    interface HTMLFileInputPageElement extends StencilComponents.FileInputPage, HTMLStencilElement {}

    var HTMLFileInputPageElement: {
      prototype: HTMLFileInputPageElement;
      new (): HTMLFileInputPageElement;
    };
    

    interface HTMLFormPageElement extends StencilComponents.FormPage, HTMLStencilElement {}

    var HTMLFormPageElement: {
      prototype: HTMLFormPageElement;
      new (): HTMLFormPageElement;
    };
    

    interface HTMLInfiniteListPageElement extends StencilComponents.InfiniteListPage, HTMLStencilElement {}

    var HTMLInfiniteListPageElement: {
      prototype: HTMLInfiniteListPageElement;
      new (): HTMLInfiniteListPageElement;
    };
    

    interface HTMLInlineeditPageElement extends StencilComponents.InlineeditPage, HTMLStencilElement {}

    var HTMLInlineeditPageElement: {
      prototype: HTMLInlineeditPageElement;
      new (): HTMLInlineeditPageElement;
    };
    

    interface HTMLInlineeditTextareaPageElement extends StencilComponents.InlineeditTextareaPage, HTMLStencilElement {}

    var HTMLInlineeditTextareaPageElement: {
      prototype: HTMLInlineeditTextareaPageElement;
      new (): HTMLInlineeditTextareaPageElement;
    };
    

    interface HTMLListPageElement extends StencilComponents.ListPage, HTMLStencilElement {}

    var HTMLListPageElement: {
      prototype: HTMLListPageElement;
      new (): HTMLListPageElement;
    };
    

    interface HTMLMarkdownPageElement extends StencilComponents.MarkdownPage, HTMLStencilElement {}

    var HTMLMarkdownPageElement: {
      prototype: HTMLMarkdownPageElement;
      new (): HTMLMarkdownPageElement;
    };
    

    interface HTMLModalPageElement extends StencilComponents.ModalPage, HTMLStencilElement {}

    var HTMLModalPageElement: {
      prototype: HTMLModalPageElement;
      new (): HTMLModalPageElement;
    };
    

    interface HTMLMomentPageElement extends StencilComponents.MomentPage, HTMLStencilElement {}

    var HTMLMomentPageElement: {
      prototype: HTMLMomentPageElement;
      new (): HTMLMomentPageElement;
    };
    

    interface HTMLMultiselectPageElement extends StencilComponents.MultiselectPage, HTMLStencilElement {}

    var HTMLMultiselectPageElement: {
      prototype: HTMLMultiselectPageElement;
      new (): HTMLMultiselectPageElement;
    };
    

    interface HTMLMwcSliderPageElement extends StencilComponents.MwcSliderPage, HTMLStencilElement {}

    var HTMLMwcSliderPageElement: {
      prototype: HTMLMwcSliderPageElement;
      new (): HTMLMwcSliderPageElement;
    };
    

    interface HTMLMyCheckboxPageElement extends StencilComponents.MyCheckboxPage, HTMLStencilElement {}

    var HTMLMyCheckboxPageElement: {
      prototype: HTMLMyCheckboxPageElement;
      new (): HTMLMyCheckboxPageElement;
    };
    

    interface HTMLNavbarPageElement extends StencilComponents.NavbarPage, HTMLStencilElement {}

    var HTMLNavbarPageElement: {
      prototype: HTMLNavbarPageElement;
      new (): HTMLNavbarPageElement;
    };
    

    interface HTMLMySwitchPageElement extends StencilComponents.MySwitchPage, HTMLStencilElement {}

    var HTMLMySwitchPageElement: {
      prototype: HTMLMySwitchPageElement;
      new (): HTMLMySwitchPageElement;
    };
    

    interface HTMLNavigationPageElement extends StencilComponents.NavigationPage, HTMLStencilElement {}

    var HTMLNavigationPageElement: {
      prototype: HTMLNavigationPageElement;
      new (): HTMLNavigationPageElement;
    };
    

    interface HTMLNumberInputPageElement extends StencilComponents.NumberInputPage, HTMLStencilElement {}

    var HTMLNumberInputPageElement: {
      prototype: HTMLNumberInputPageElement;
      new (): HTMLNumberInputPageElement;
    };
    

    interface HTMLPopperPageElement extends StencilComponents.PopperPage, HTMLStencilElement {}

    var HTMLPopperPageElement: {
      prototype: HTMLPopperPageElement;
      new (): HTMLPopperPageElement;
    };
    

    interface HTMLProgressBarPageElement extends StencilComponents.ProgressBarPage, HTMLStencilElement {}

    var HTMLProgressBarPageElement: {
      prototype: HTMLProgressBarPageElement;
      new (): HTMLProgressBarPageElement;
    };
    

    interface HTMLResolutionInfoPageElement extends StencilComponents.ResolutionInfoPage, HTMLStencilElement {}

    var HTMLResolutionInfoPageElement: {
      prototype: HTMLResolutionInfoPageElement;
      new (): HTMLResolutionInfoPageElement;
    };
    

    interface HTMLStencilBsDemoPageElement extends StencilComponents.StencilBsDemoPage, HTMLStencilElement {}

    var HTMLStencilBsDemoPageElement: {
      prototype: HTMLStencilBsDemoPageElement;
      new (): HTMLStencilBsDemoPageElement;
    };
    

    interface HTMLStickyPageElement extends StencilComponents.StickyPage, HTMLStencilElement {}

    var HTMLStickyPageElement: {
      prototype: HTMLStickyPageElement;
      new (): HTMLStickyPageElement;
    };
    

    interface HTMLTabsPageElement extends StencilComponents.TabsPage, HTMLStencilElement {}

    var HTMLTabsPageElement: {
      prototype: HTMLTabsPageElement;
      new (): HTMLTabsPageElement;
    };
    

    interface HTMLTagPageElement extends StencilComponents.TagPage, HTMLStencilElement {}

    var HTMLTagPageElement: {
      prototype: HTMLTagPageElement;
      new (): HTMLTagPageElement;
    };
    

    interface HTMLTooltipPageElement extends StencilComponents.TooltipPage, HTMLStencilElement {}

    var HTMLTooltipPageElement: {
      prototype: HTMLTooltipPageElement;
      new (): HTMLTooltipPageElement;
    };
    

    interface HTMLTypeaheadPageElement extends StencilComponents.TypeaheadPage, HTMLStencilElement {}

    var HTMLTypeaheadPageElement: {
      prototype: HTMLTypeaheadPageElement;
      new (): HTMLTypeaheadPageElement;
    };
    

    interface HTMLVideoPlayerPageElement extends StencilComponents.VideoPlayerPage, HTMLStencilElement {}

    var HTMLVideoPlayerPageElement: {
      prototype: HTMLVideoPlayerPageElement;
      new (): HTMLVideoPlayerPageElement;
    };
    

    interface HTMLWysiwygEditorPageElement extends StencilComponents.WysiwygEditorPage, HTMLStencilElement {}

    var HTMLWysiwygEditorPageElement: {
      prototype: HTMLWysiwygEditorPageElement;
      new (): HTMLWysiwygEditorPageElement;
    };
    

  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {
    'cwc-alert': JSXElements.CwcAlertAttributes;
    'cwc-autocomplete-select': JSXElements.CwcAutocompleteSelectAttributes;
    'cwc-avatar': JSXElements.CwcAvatarAttributes;
    'cwc-checkbox-group': JSXElements.CwcCheckboxGroupAttributes;
    'cwc-combobox': JSXElements.CwcComboboxAttributes;
    'cwc-datepicker': JSXElements.CwcDatepickerAttributes;
    'cwc-datetime-input': JSXElements.CwcDatetimeInputAttributes;
    'cwc-dnd': JSXElements.CwcDndAttributes;
    'cwc-dropdown': JSXElements.CwcDropdownAttributes;
    'cwc-file-input': JSXElements.CwcFileInputAttributes;
    'cwc-infinite-list-watcher': JSXElements.CwcInfiniteListWatcherAttributes;
    'cwc-inlineedit-textarea': JSXElements.CwcInlineeditTextareaAttributes;
    'cwc-inlineedit': JSXElements.CwcInlineeditAttributes;
    'cwc-list': JSXElements.CwcListAttributes;
    'cwc-markdown': JSXElements.CwcMarkdownAttributes;
    'cwc-modal': JSXElements.CwcModalAttributes;
    'cwc-moment': JSXElements.CwcMomentAttributes;
    'cwc-multiselect': JSXElements.CwcMultiselectAttributes;
    'cwc-navigation-container-section': JSXElements.CwcNavigationContainerSectionAttributes;
    'cwc-navigation-global-item': JSXElements.CwcNavigationGlobalItemAttributes;
    'cwc-navigation-global-section': JSXElements.CwcNavigationGlobalSectionAttributes;
    'cwc-navigation': JSXElements.CwcNavigationAttributes;
    'navigation-item-group': JSXElements.NavigationItemGroupAttributes;
    'navigation-item': JSXElements.NavigationItemAttributes;
    'navigation-title': JSXElements.NavigationTitleAttributes;
    'cwc-number-input': JSXElements.CwcNumberInputAttributes;
    'cwc-popper': JSXElements.CwcPopperAttributes;
    'cwc-progress-bar': JSXElements.CwcProgressBarAttributes;
    'cwc-resolution-info': JSXElements.CwcResolutionInfoAttributes;
    'cwc-sticky-header': JSXElements.CwcStickyHeaderAttributes;
    'cwc-sticky': JSXElements.CwcStickyAttributes;
    'cwc-styles': JSXElements.CwcStylesAttributes;
    'cwc-switch': JSXElements.CwcSwitchAttributes;
    'cwc-tag': JSXElements.CwcTagAttributes;
    'cwc-typeahead': JSXElements.CwcTypeaheadAttributes;
    'cwc-wysiwyg-editor': JSXElements.CwcWysiwygEditorAttributes;
    'fcl-image': JSXElements.FclImageAttributes;
    'fcl-video-player': JSXElements.FclVideoPlayerAttributes;
    'mwc-slider': JSXElements.MwcSliderAttributes;
    'my-checkbox': JSXElements.MyCheckboxAttributes;
    'my-dropdown': JSXElements.MyDropdownAttributes;
    'my-dynamic-form': JSXElements.MyDynamicFormAttributes;
    'my-input': JSXElements.MyInputAttributes;
    'scb-badge': JSXElements.ScbBadgeAttributes;
    'scb-breadcrumb': JSXElements.ScbBreadcrumbAttributes;
    'scb-collapse': JSXElements.ScbCollapseAttributes;
    'scb-navbar': JSXElements.ScbNavbarAttributes;
    'scb-tooltip': JSXElements.ScbTooltipAttributes;
    'stc-tab-content': JSXElements.StcTabContentAttributes;
    'stc-tab-header': JSXElements.StcTabHeaderAttributes;
    'stc-tabs': JSXElements.StcTabsAttributes;
    'alerts-page': JSXElements.AlertsPageAttributes;
    'autocomplete-select-page': JSXElements.AutocompleteSelectPageAttributes;
    'avatar-page': JSXElements.AvatarPageAttributes;
    'badge-page': JSXElements.BadgePageAttributes;
    'breadcrumb-page': JSXElements.BreadcrumbPageAttributes;
    'checkbox-group-page': JSXElements.CheckboxGroupPageAttributes;
    'collapse-page': JSXElements.CollapsePageAttributes;
    'combobox-page': JSXElements.ComboboxPageAttributes;
    'datepicker-page': JSXElements.DatepickerPageAttributes;
    'datetime-input-page': JSXElements.DatetimeInputPageAttributes;
    'dnd-page': JSXElements.DndPageAttributes;
    'dropdown-page': JSXElements.DropdownPageAttributes;
    'fcl-image-page': JSXElements.FclImagePageAttributes;
    'file-input-page': JSXElements.FileInputPageAttributes;
    'form-page': JSXElements.FormPageAttributes;
    'infinite-list-page': JSXElements.InfiniteListPageAttributes;
    'inlineedit-page': JSXElements.InlineeditPageAttributes;
    'inlineedit-textarea-page': JSXElements.InlineeditTextareaPageAttributes;
    'list-page': JSXElements.ListPageAttributes;
    'markdown-page': JSXElements.MarkdownPageAttributes;
    'modal-page': JSXElements.ModalPageAttributes;
    'moment-page': JSXElements.MomentPageAttributes;
    'multiselect-page': JSXElements.MultiselectPageAttributes;
    'mwc-slider-page': JSXElements.MwcSliderPageAttributes;
    'my-checkbox-page': JSXElements.MyCheckboxPageAttributes;
    'navbar-page': JSXElements.NavbarPageAttributes;
    'my-switch-page': JSXElements.MySwitchPageAttributes;
    'navigation-page': JSXElements.NavigationPageAttributes;
    'number-input-page': JSXElements.NumberInputPageAttributes;
    'popper-page': JSXElements.PopperPageAttributes;
    'progress-bar-page': JSXElements.ProgressBarPageAttributes;
    'resolution-info-page': JSXElements.ResolutionInfoPageAttributes;
    'stencil-bs-demo-page': JSXElements.StencilBsDemoPageAttributes;
    'sticky-page': JSXElements.StickyPageAttributes;
    'tabs-page': JSXElements.TabsPageAttributes;
    'tag-page': JSXElements.TagPageAttributes;
    'tooltip-page': JSXElements.TooltipPageAttributes;
    'typeahead-page': JSXElements.TypeaheadPageAttributes;
    'video-player-page': JSXElements.VideoPlayerPageAttributes;
    'wysiwyg-editor-page': JSXElements.WysiwygEditorPageAttributes;
    }
  }

  namespace JSXElements {

    export interface CwcAlertAttributes extends HTMLAttributes {
      'animatable'?: boolean;
      'dismissible'?: boolean;
      'onDismiss'?: (hostEl: HTMLElement) => void;
      'onToggleVisibility'?: (event: CustomEvent) => void;
      'show'?: boolean;
      'type'?: string;
    }

    export interface CwcAutocompleteSelectAttributes extends HTMLAttributes {
      'data'?: any[];
      'id'?: string;
      'idValue'?: string;
      'itemAs'?: string;
      'label'?: string;
      'minSearchLength'?: number;
      'onMultiselectOnSubmit'?: (event: CustomEvent) => void;
      'onOnChange'?: (event: CustomEvent) => void;
      'onTextChange'?: (event: CustomEvent) => void;
      'placeholder'?: string;
      'searchKey'?: string;
      'template'?: string;
      'value'?: any[];
    }

    export interface CwcAvatarAttributes extends HTMLAttributes {
      'background'?: string;
      'color'?: string;
      'fontSize'?: number;
      'length'?: number;
      'name'?: string;
      'rounded'?: boolean;
      'size'?: number;
      'uppercase'?: boolean;
    }

    export interface CwcCheckboxGroupAttributes extends HTMLAttributes {
      'allowSelectAll'?: boolean;
      'data'?: Array<Object>;
      'displayProp'?: string;
      'onSelectionChanged'?: (event: CustomEvent) => void;
      'selectAllLabel'?: string;
      'value'?: Array<Object>;
    }

    export interface CwcComboboxAttributes extends HTMLAttributes {
      'btnLeftPosition'?: boolean;
      'btnText'?: string;
      'data'?: Array<string|number>;
      'id'?: string;
      'label'?: string;
      'onOnChange'?: (event: CustomEvent) => void;
      'placeholder'?: string;
      'readonly'?: boolean;
      'value'?: any;
    }

    export interface CwcDatepickerAttributes extends HTMLAttributes {
      'endDate'?: string;
      'format'?: string;
      'id'?: string;
      'label'?: string;
      'lang'?: string;
      'onOnChange'?: (event: CustomEvent) => void;
      'onStatechange'?: (event: CustomEvent) => void;
      'startDate'?: string;
    }

    export interface CwcDatetimeInputAttributes extends HTMLAttributes {
      'clamp'?: string;
      'date'?: string;
      'dateOrder'?: Object;
      'datetime'?: string;
      'day'?: number;
      'default'?: any;
      'disabled'?: boolean;
      'hour'?: number;
      'hour12'?: number;
      'hour12Format'?: boolean;
      'invalid'?: boolean;
      'isAm'?: boolean;
      'locale'?: string;
      'markers'?: Object;
      'max'?: Object;
      'millisecond'?: number;
      'min'?: Object;
      'minute'?: number;
      'month'?: number;
      'name'?: string;
      'partsDisabled'?: Object;
      'partsHidden'?: Object;
      'partsStep'?: Object;
      'propertyForValue'?: string;
      'required'?: boolean;
      'second'?: number;
      'step'?: number;
      'time'?: string;
      'timezone'?: string;
      'value'?: Object;
      'valueAsDate'?: Date;
      'valueAsNumber'?: number;
      'withTimezone'?: boolean;
      'year'?: number;
    }

    export interface CwcDndAttributes extends HTMLAttributes {
      'dragulaOpts'?: any;
      'handleClass'?: string;
      'onDndcancel'?: (event: CustomEvent) => void;
      'onDndcloned'?: (event: CustomEvent) => void;
      /**
       * Dragula events
       */
      'onDnddrag'?: (event: CustomEvent) => void;
      'onDnddragend'?: (event: CustomEvent) => void;
      'onDnddrop'?: (event: CustomEvent) => void;
      'onDndmodelupdate'?: (event: CustomEvent) => void;
      'onDndout'?: (event: CustomEvent) => void;
      'onDndover'?: (event: CustomEvent) => void;
      'onDndremove'?: (event: CustomEvent) => void;
      'onDndshadow'?: (event: CustomEvent) => void;
      'rows'?: string[];
    }

    export interface CwcDropdownAttributes extends HTMLAttributes {
      'onChange'?: (event: CustomEvent) => void;
    }

    export interface CwcFileInputAttributes extends HTMLAttributes {
      'accept'?: string;
      'files'?: any[];
      'formDataName'?: string;
      'headers'?: string;
      'maxFileSize'?: number;
      'maxFiles'?: number;
      'method'?: string;
      'noAuto'?: boolean;
      'nodrop'?: boolean;
      'target'?: string;
      'timeout'?: number;
      'type'?: BootstrapThemeColor;
    }

    export interface CwcInfiniteListWatcherAttributes extends HTMLAttributes {
      'bindToList'?: boolean;
      'bottomOffset'?: number;
      'debounce'?: number;
      'lastItemSelector'?: string;
      'listSelector'?: string;
      'onOnBottomReach'?: (event: CustomEvent) => void;
    }

    export interface CwcInlineeditTextareaAttributes extends HTMLAttributes {
      'id'?: string;
      'label'?: string;
      'onOnCancel'?: (event: CustomEvent) => void;
      'onOnChange'?: (event: CustomEvent) => void;
      'onOnConfirm'?: (event: CustomEvent) => void;
      'placeholder'?: string;
      'value'?: string;
    }

    export interface CwcInlineeditAttributes extends HTMLAttributes {
      'id'?: string;
      'label'?: string;
      'onOnCancel'?: (event: CustomEvent) => void;
      'onOnChange'?: (event: CustomEvent) => void;
      'onOnConfirm'?: (event: CustomEvent) => void;
      'placeholder'?: string;
      'value'?: any;
    }

    export interface CwcListAttributes extends HTMLAttributes {
      'addClass'?: string;
      'addClassEven'?: string;
      'addClassFirst'?: string;
      'addClassLast'?: string;
      'addClassOdd'?: string;
      'interpolationRegex'?: any;
      'itemAs'?: string;
      'items'?: any[];
      'listId'?: string;
      'wrapperClass'?: string;
    }

    export interface CwcMarkdownAttributes extends HTMLAttributes {
      'data'?: string;
    }

    export interface CwcModalAttributes extends HTMLAttributes {
      'animation'?: boolean;
      'backdrop'?: any;
      'btntype'?: string;
      'centered'?: boolean;
      'customId'?: string;
      'keyboard'?: boolean;
      'modalTitle'?: string;
      'modalfocus'?: boolean;
      'onOnCloseModal'?: (event: CustomEvent) => void;
      'onOnOpenModal'?: (event: CustomEvent) => void;
      'show'?: boolean;
      'showButton'?: boolean;
      'size'?: string;
      'toggle'?: () => any;
    }

    export interface CwcMomentAttributes extends HTMLAttributes {
      'date'?: string;
      'diff'?: boolean;
      'duration'?: string;
      'format'?: string;
      'humanize'?: boolean;
      'lang'?: string;
      'separator'?: string;
      'unit'?: DurationInputArg2;
    }

    export interface CwcMultiselectAttributes extends HTMLAttributes {
      'dataDisplay'?: string;
      'onOnchange'?: (event: CustomEvent) => void;
      'selected'?: Array<any>;
      'value'?: Array<any>;
    }

    export interface CwcNavigationContainerSectionAttributes extends HTMLAttributes {

    }

    export interface CwcNavigationGlobalItemAttributes extends HTMLAttributes {
      'icon'?: any;
      'isActive'?: boolean;
      'link'?: string;
      'titleText'?: string;
    }

    export interface CwcNavigationGlobalSectionAttributes extends HTMLAttributes {

    }

    export interface CwcNavigationAttributes extends HTMLAttributes {
      'isCollapsed'?: boolean;
    }

    export interface NavigationItemGroupAttributes extends HTMLAttributes {
      'hasSeparator'?: boolean;
      'text'?: string;
      'titleText'?: string;
    }

    export interface NavigationItemAttributes extends HTMLAttributes {
      'compact'?: boolean;
      'dropIcon'?: string;
      'icon'?: string;
      'isActive'?: boolean;
      'link'?: string;
      'showIcon'?: boolean;
      'subText'?: string;
      'text'?: string;
      'titleText'?: string;
    }

    export interface NavigationTitleAttributes extends HTMLAttributes {
      'compact'?: boolean;
      'icon'?: string;
      'showIcon'?: boolean;
      'text'?: string;
      'titleText'?: string;
    }

    export interface CwcNumberInputAttributes extends HTMLAttributes {
      'alwaysSign'?: boolean;
      'autoPadding'?: boolean;
      'autoResize'?: boolean;
      'currency'?: string;
      'currencyDisplay'?: string;
      'default'?: number;
      'disabled'?: boolean;
      'formatNumber'?: Function;
      'hidden'?: boolean;
      'input'?: string;
      'invalid'?: boolean;
      'locale'?: string;
      'max'?: number;
      'maximumFractionDigits'?: number;
      'maximumSignificantDigits'?: number;
      'min'?: number;
      'minimumFractionDigits'?: number;
      'minimumIntegerDigits'?: number;
      'minimumSignificantDigits'?: number;
      'minlength'?: number;
      'name'?: string;
      'noAutoWidth'?: boolean;
      'noClamp'?: boolean;
      'numberStyle'?: string;
      'onNumberInputChanged'?: (event: CustomEvent) => void;
      'padLength'?: number;
      'parseNumber'?: Function;
      'placeholder'?: string;
      'propertyForValue'?: string;
      'required'?: boolean;
      'saturate'?: boolean;
      'separators'?: Object;
      'startAt'?: number;
      'step'?: number;
      'stepMod'?: number;
      'unit'?: string;
      'unitSeparator'?: string;
      'useGrouping'?: boolean;
      'value'?: number;
      'valueAsNumber'?: number;
    }

    export interface CwcPopperAttributes extends HTMLAttributes {
      'arrow'?: boolean;
      'autoClose'?: boolean;
      'autoOpen'?: boolean;
      'closeable'?: boolean;
      'isToggleBtn'?: boolean;
      'placement'?: Placement;
      'refid'?: string;
      'trigger'?: string;
    }

    export interface CwcProgressBarAttributes extends HTMLAttributes {
      'animated'?: boolean;
      'classes'?: string;
      'closable'?: boolean;
      'height'?: number;
      'progress'?: number;
      'progressBarType'?: BootstrapThemeColor;
      'striped'?: boolean;
      'text'?: string;
    }

    export interface CwcResolutionInfoAttributes extends HTMLAttributes {
      'height'?: number;
      'width'?: number;
    }

    export interface CwcStickyHeaderAttributes extends HTMLAttributes {
      'background'?: string;
      'color'?: string;
    }

    export interface CwcStickyAttributes extends HTMLAttributes {

    }

    export interface CwcStylesAttributes extends HTMLAttributes {

    }

    export interface CwcSwitchAttributes extends HTMLAttributes {
      'checkboxTitle'?: string;
      'checked'?: boolean;
      'for'?: string;
      'id'?: string;
      'labelOFF'?: string;
      'labelON'?: string;
      'onPostValue'?: (event: CustomEvent) => void;
      'value'?: boolean;
    }

    export interface CwcTagAttributes extends HTMLAttributes {
      'classes'?: string;
      'closable'?: boolean;
      'imgLink'?: string;
      'limitTo'?: number;
      'link'?: string;
      'onCloseData'?: any;
      'onTagCloseEvent'?: (event: CustomEvent) => void;
      'removeOnClose'?: boolean;
      'rounded'?: boolean;
      'tagType'?: BootstrapThemeColor;
      'text'?: string;
    }

    export interface CwcTypeaheadAttributes extends HTMLAttributes {
      'data'?: any[];
      'googleAutocomplete'?: boolean;
      'highlight'?: boolean;
      'idValue'?: string;
      'itemAs'?: string;
      'minSearchLength'?: number;
      'onTypeaheadOnSubmit'?: (event: CustomEvent) => void;
      'placeholder'?: string;
      'searchKey'?: string;
      'template'?: string;
    }

    export interface CwcWysiwygEditorAttributes extends HTMLAttributes {
      'defaultMode'?: string;
      'fencing'?: boolean;
      'html'?: boolean;
      'id'?: string;
      'images'?: object;
      'label'?: string;
      'markdown'?: boolean;
      'onOnChange'?: (event: CustomEvent) => void;
      'wysiwyg'?: boolean;
    }

    export interface FclImageAttributes extends HTMLAttributes {
      'brokenUrl'?: any;
      'height'?: any;
      'src'?: any;
      'width'?: any;
    }

    export interface FclVideoPlayerAttributes extends HTMLAttributes {
      'autoinit'?: boolean;
      'className'?: string;
      'controls'?: boolean;
      'poster'?: string;
      'theme'?: string;
      'thumbnail'?: any;
    }

    export interface MwcSliderAttributes extends HTMLAttributes {
      'disabled'?: boolean;
      'max'?: number;
      'min'?: number;
      'onChange'?: (event: CustomEvent) => void;
      'slidercolor'?: string;
      'step'?: number;
      'value'?: number;
    }

    export interface MyCheckboxAttributes extends HTMLAttributes {
      'checkboxTitle'?: string;
      'checked'?: boolean;
      'for'?: string;
      'id'?: string;
      'onPostValue'?: (event: CustomEvent) => void;
      'value'?: boolean;
    }

    export interface MyDropdownAttributes extends HTMLAttributes {
      'dropdownTitle'?: string;
      'dropdownValue'?: string;
      'for'?: string;
      'id'?: string;
      'onPostValue'?: (event: CustomEvent) => void;
    }

    export interface MyDynamicFormAttributes extends HTMLAttributes {
      'ajv'?: any;
      'form'?: any;
      'schema'?: any;
    }

    export interface MyInputAttributes extends HTMLAttributes {
      'for'?: string;
      'format'?: any;
      'id'?: string;
      'inputTitle'?: string;
      'onPostValue'?: (event: CustomEvent) => void;
      'value'?: any;
    }

    export interface ScbBadgeAttributes extends HTMLAttributes {
      'link'?: string;
      'pill'?: boolean;
      'type'?: BootstrapThemeColor;
    }

    export interface ScbBreadcrumbAttributes extends HTMLAttributes {
      'items'?: IBreadcrumbItem[];
    }

    export interface ScbCollapseAttributes extends HTMLAttributes {
      'collapseid'?: string;
      'items'?: any[];
    }

    export interface ScbNavbarAttributes extends HTMLAttributes {
      'bgcolor'?: string;
      'navbarcolor'?: string;
      'placement'?: string;
      'size'?: string;
    }

    export interface ScbTooltipAttributes extends HTMLAttributes {
      'delay'?: any;
      'href'?: string;
      'offset'?: string;
      'placement'?: string;
      'target'?: string;
      'tooltipTitle'?: string;
      'trigger'?: string;
      'type'?: string;
    }

    export interface StcTabContentAttributes extends HTMLAttributes {
      'name'?: string;
    }

    export interface StcTabHeaderAttributes extends HTMLAttributes {
      'name'?: string;
      'onOnSelect'?: (event: CustomEvent) => void;
    }

    export interface StcTabsAttributes extends HTMLAttributes {

    }

    export interface AlertsPageAttributes extends HTMLAttributes {

    }

    export interface AutocompleteSelectPageAttributes extends HTMLAttributes {

    }

    export interface AvatarPageAttributes extends HTMLAttributes {

    }

    export interface BadgePageAttributes extends HTMLAttributes {

    }

    export interface BreadcrumbPageAttributes extends HTMLAttributes {

    }

    export interface CheckboxGroupPageAttributes extends HTMLAttributes {
      'value'?: Array<Object>;
    }

    export interface CollapsePageAttributes extends HTMLAttributes {

    }

    export interface ComboboxPageAttributes extends HTMLAttributes {

    }

    export interface DatepickerPageAttributes extends HTMLAttributes {

    }

    export interface DatetimeInputPageAttributes extends HTMLAttributes {

    }

    export interface DndPageAttributes extends HTMLAttributes {

    }

    export interface DropdownPageAttributes extends HTMLAttributes {

    }

    export interface FclImagePageAttributes extends HTMLAttributes {

    }

    export interface FileInputPageAttributes extends HTMLAttributes {

    }

    export interface FormPageAttributes extends HTMLAttributes {

    }

    export interface InfiniteListPageAttributes extends HTMLAttributes {

    }

    export interface InlineeditPageAttributes extends HTMLAttributes {

    }

    export interface InlineeditTextareaPageAttributes extends HTMLAttributes {

    }

    export interface ListPageAttributes extends HTMLAttributes {

    }

    export interface MarkdownPageAttributes extends HTMLAttributes {

    }

    export interface ModalPageAttributes extends HTMLAttributes {

    }

    export interface MomentPageAttributes extends HTMLAttributes {

    }

    export interface MultiselectPageAttributes extends HTMLAttributes {

    }

    export interface MwcSliderPageAttributes extends HTMLAttributes {

    }

    export interface MyCheckboxPageAttributes extends HTMLAttributes {

    }

    export interface NavbarPageAttributes extends HTMLAttributes {

    }

    export interface MySwitchPageAttributes extends HTMLAttributes {

    }

    export interface NavigationPageAttributes extends HTMLAttributes {
      'onNaviconstoggle'?: (event: CustomEvent) => void;
      'onNavigationcomponentnumber'?: (event: CustomEvent) => void;
      'onNavigationshowcontrol'?: (event: CustomEvent) => void;
      'onShownavigationcontainertoggle'?: (event: CustomEvent) => void;
      'onShownavigationtoggle'?: (event: CustomEvent) => void;
    }

    export interface NumberInputPageAttributes extends HTMLAttributes {

    }

    export interface PopperPageAttributes extends HTMLAttributes {

    }

    export interface ProgressBarPageAttributes extends HTMLAttributes {

    }

    export interface ResolutionInfoPageAttributes extends HTMLAttributes {

    }

    export interface StencilBsDemoPageAttributes extends HTMLAttributes {
      'root'?: string;
    }

    export interface StickyPageAttributes extends HTMLAttributes {

    }

    export interface TabsPageAttributes extends HTMLAttributes {

    }

    export interface TagPageAttributes extends HTMLAttributes {

    }

    export interface TooltipPageAttributes extends HTMLAttributes {

    }

    export interface TypeaheadPageAttributes extends HTMLAttributes {

    }

    export interface VideoPlayerPageAttributes extends HTMLAttributes {

    }

    export interface WysiwygEditorPageAttributes extends HTMLAttributes {

    }
  }

  interface HTMLElementTagNameMap {
    'cwc-alert': HTMLCwcAlertElement
    'cwc-autocomplete-select': HTMLCwcAutocompleteSelectElement
    'cwc-avatar': HTMLCwcAvatarElement
    'cwc-checkbox-group': HTMLCwcCheckboxGroupElement
    'cwc-combobox': HTMLCwcComboboxElement
    'cwc-datepicker': HTMLCwcDatepickerElement
    'cwc-datetime-input': HTMLCwcDatetimeInputElement
    'cwc-dnd': HTMLCwcDndElement
    'cwc-dropdown': HTMLCwcDropdownElement
    'cwc-file-input': HTMLCwcFileInputElement
    'cwc-infinite-list-watcher': HTMLCwcInfiniteListWatcherElement
    'cwc-inlineedit-textarea': HTMLCwcInlineeditTextareaElement
    'cwc-inlineedit': HTMLCwcInlineeditElement
    'cwc-list': HTMLCwcListElement
    'cwc-markdown': HTMLCwcMarkdownElement
    'cwc-modal': HTMLCwcModalElement
    'cwc-moment': HTMLCwcMomentElement
    'cwc-multiselect': HTMLCwcMultiselectElement
    'cwc-navigation-container-section': HTMLCwcNavigationContainerSectionElement
    'cwc-navigation-global-item': HTMLCwcNavigationGlobalItemElement
    'cwc-navigation-global-section': HTMLCwcNavigationGlobalSectionElement
    'cwc-navigation': HTMLCwcNavigationElement
    'navigation-item-group': HTMLNavigationItemGroupElement
    'navigation-item': HTMLNavigationItemElement
    'navigation-title': HTMLNavigationTitleElement
    'cwc-number-input': HTMLCwcNumberInputElement
    'cwc-popper': HTMLCwcPopperElement
    'cwc-progress-bar': HTMLCwcProgressBarElement
    'cwc-resolution-info': HTMLCwcResolutionInfoElement
    'cwc-sticky-header': HTMLCwcStickyHeaderElement
    'cwc-sticky': HTMLCwcStickyElement
    'cwc-styles': HTMLCwcStylesElement
    'cwc-switch': HTMLCwcSwitchElement
    'cwc-tag': HTMLCwcTagElement
    'cwc-typeahead': HTMLCwcTypeaheadElement
    'cwc-wysiwyg-editor': HTMLCwcWysiwygEditorElement
    'fcl-image': HTMLFclImageElement
    'fcl-video-player': HTMLFclVideoPlayerElement
    'mwc-slider': HTMLMwcSliderElement
    'my-checkbox': HTMLMyCheckboxElement
    'my-dropdown': HTMLMyDropdownElement
    'my-dynamic-form': HTMLMyDynamicFormElement
    'my-input': HTMLMyInputElement
    'scb-badge': HTMLScbBadgeElement
    'scb-breadcrumb': HTMLScbBreadcrumbElement
    'scb-collapse': HTMLScbCollapseElement
    'scb-navbar': HTMLScbNavbarElement
    'scb-tooltip': HTMLScbTooltipElement
    'stc-tab-content': HTMLStcTabContentElement
    'stc-tab-header': HTMLStcTabHeaderElement
    'stc-tabs': HTMLStcTabsElement
    'alerts-page': HTMLAlertsPageElement
    'autocomplete-select-page': HTMLAutocompleteSelectPageElement
    'avatar-page': HTMLAvatarPageElement
    'badge-page': HTMLBadgePageElement
    'breadcrumb-page': HTMLBreadcrumbPageElement
    'checkbox-group-page': HTMLCheckboxGroupPageElement
    'collapse-page': HTMLCollapsePageElement
    'combobox-page': HTMLComboboxPageElement
    'datepicker-page': HTMLDatepickerPageElement
    'datetime-input-page': HTMLDatetimeInputPageElement
    'dnd-page': HTMLDndPageElement
    'dropdown-page': HTMLDropdownPageElement
    'fcl-image-page': HTMLFclImagePageElement
    'file-input-page': HTMLFileInputPageElement
    'form-page': HTMLFormPageElement
    'infinite-list-page': HTMLInfiniteListPageElement
    'inlineedit-page': HTMLInlineeditPageElement
    'inlineedit-textarea-page': HTMLInlineeditTextareaPageElement
    'list-page': HTMLListPageElement
    'markdown-page': HTMLMarkdownPageElement
    'modal-page': HTMLModalPageElement
    'moment-page': HTMLMomentPageElement
    'multiselect-page': HTMLMultiselectPageElement
    'mwc-slider-page': HTMLMwcSliderPageElement
    'my-checkbox-page': HTMLMyCheckboxPageElement
    'navbar-page': HTMLNavbarPageElement
    'my-switch-page': HTMLMySwitchPageElement
    'navigation-page': HTMLNavigationPageElement
    'number-input-page': HTMLNumberInputPageElement
    'popper-page': HTMLPopperPageElement
    'progress-bar-page': HTMLProgressBarPageElement
    'resolution-info-page': HTMLResolutionInfoPageElement
    'stencil-bs-demo-page': HTMLStencilBsDemoPageElement
    'sticky-page': HTMLStickyPageElement
    'tabs-page': HTMLTabsPageElement
    'tag-page': HTMLTagPageElement
    'tooltip-page': HTMLTooltipPageElement
    'typeahead-page': HTMLTypeaheadPageElement
    'video-player-page': HTMLVideoPlayerPageElement
    'wysiwyg-editor-page': HTMLWysiwygEditorPageElement
  }

  interface ElementTagNameMap {
    'cwc-alert': HTMLCwcAlertElement;
    'cwc-autocomplete-select': HTMLCwcAutocompleteSelectElement;
    'cwc-avatar': HTMLCwcAvatarElement;
    'cwc-checkbox-group': HTMLCwcCheckboxGroupElement;
    'cwc-combobox': HTMLCwcComboboxElement;
    'cwc-datepicker': HTMLCwcDatepickerElement;
    'cwc-datetime-input': HTMLCwcDatetimeInputElement;
    'cwc-dnd': HTMLCwcDndElement;
    'cwc-dropdown': HTMLCwcDropdownElement;
    'cwc-file-input': HTMLCwcFileInputElement;
    'cwc-infinite-list-watcher': HTMLCwcInfiniteListWatcherElement;
    'cwc-inlineedit-textarea': HTMLCwcInlineeditTextareaElement;
    'cwc-inlineedit': HTMLCwcInlineeditElement;
    'cwc-list': HTMLCwcListElement;
    'cwc-markdown': HTMLCwcMarkdownElement;
    'cwc-modal': HTMLCwcModalElement;
    'cwc-moment': HTMLCwcMomentElement;
    'cwc-multiselect': HTMLCwcMultiselectElement;
    'cwc-navigation-container-section': HTMLCwcNavigationContainerSectionElement;
    'cwc-navigation-global-item': HTMLCwcNavigationGlobalItemElement;
    'cwc-navigation-global-section': HTMLCwcNavigationGlobalSectionElement;
    'cwc-navigation': HTMLCwcNavigationElement;
    'navigation-item-group': HTMLNavigationItemGroupElement;
    'navigation-item': HTMLNavigationItemElement;
    'navigation-title': HTMLNavigationTitleElement;
    'cwc-number-input': HTMLCwcNumberInputElement;
    'cwc-popper': HTMLCwcPopperElement;
    'cwc-progress-bar': HTMLCwcProgressBarElement;
    'cwc-resolution-info': HTMLCwcResolutionInfoElement;
    'cwc-sticky-header': HTMLCwcStickyHeaderElement;
    'cwc-sticky': HTMLCwcStickyElement;
    'cwc-styles': HTMLCwcStylesElement;
    'cwc-switch': HTMLCwcSwitchElement;
    'cwc-tag': HTMLCwcTagElement;
    'cwc-typeahead': HTMLCwcTypeaheadElement;
    'cwc-wysiwyg-editor': HTMLCwcWysiwygEditorElement;
    'fcl-image': HTMLFclImageElement;
    'fcl-video-player': HTMLFclVideoPlayerElement;
    'mwc-slider': HTMLMwcSliderElement;
    'my-checkbox': HTMLMyCheckboxElement;
    'my-dropdown': HTMLMyDropdownElement;
    'my-dynamic-form': HTMLMyDynamicFormElement;
    'my-input': HTMLMyInputElement;
    'scb-badge': HTMLScbBadgeElement;
    'scb-breadcrumb': HTMLScbBreadcrumbElement;
    'scb-collapse': HTMLScbCollapseElement;
    'scb-navbar': HTMLScbNavbarElement;
    'scb-tooltip': HTMLScbTooltipElement;
    'stc-tab-content': HTMLStcTabContentElement;
    'stc-tab-header': HTMLStcTabHeaderElement;
    'stc-tabs': HTMLStcTabsElement;
    'alerts-page': HTMLAlertsPageElement;
    'autocomplete-select-page': HTMLAutocompleteSelectPageElement;
    'avatar-page': HTMLAvatarPageElement;
    'badge-page': HTMLBadgePageElement;
    'breadcrumb-page': HTMLBreadcrumbPageElement;
    'checkbox-group-page': HTMLCheckboxGroupPageElement;
    'collapse-page': HTMLCollapsePageElement;
    'combobox-page': HTMLComboboxPageElement;
    'datepicker-page': HTMLDatepickerPageElement;
    'datetime-input-page': HTMLDatetimeInputPageElement;
    'dnd-page': HTMLDndPageElement;
    'dropdown-page': HTMLDropdownPageElement;
    'fcl-image-page': HTMLFclImagePageElement;
    'file-input-page': HTMLFileInputPageElement;
    'form-page': HTMLFormPageElement;
    'infinite-list-page': HTMLInfiniteListPageElement;
    'inlineedit-page': HTMLInlineeditPageElement;
    'inlineedit-textarea-page': HTMLInlineeditTextareaPageElement;
    'list-page': HTMLListPageElement;
    'markdown-page': HTMLMarkdownPageElement;
    'modal-page': HTMLModalPageElement;
    'moment-page': HTMLMomentPageElement;
    'multiselect-page': HTMLMultiselectPageElement;
    'mwc-slider-page': HTMLMwcSliderPageElement;
    'my-checkbox-page': HTMLMyCheckboxPageElement;
    'navbar-page': HTMLNavbarPageElement;
    'my-switch-page': HTMLMySwitchPageElement;
    'navigation-page': HTMLNavigationPageElement;
    'number-input-page': HTMLNumberInputPageElement;
    'popper-page': HTMLPopperPageElement;
    'progress-bar-page': HTMLProgressBarPageElement;
    'resolution-info-page': HTMLResolutionInfoPageElement;
    'stencil-bs-demo-page': HTMLStencilBsDemoPageElement;
    'sticky-page': HTMLStickyPageElement;
    'tabs-page': HTMLTabsPageElement;
    'tag-page': HTMLTagPageElement;
    'tooltip-page': HTMLTooltipPageElement;
    'typeahead-page': HTMLTypeaheadPageElement;
    'video-player-page': HTMLVideoPlayerPageElement;
    'wysiwyg-editor-page': HTMLWysiwygEditorPageElement;
  }
}
declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;